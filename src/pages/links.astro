---
import { imageConfig } from 'astro:assets'
import { getEntry } from 'astro:content'
import I18nKey from '../i18n/i18nKey'
import { i18n } from '../i18n/translation'
import MainGridLayout from '../layouts/MainGridLayout.astro'

// 直接使用多行字串
const myLinksDescription = `  
這裡是用來放朋友的連結還有一些有用的工具!希望工具對你也有所幫助。

如果你也想加入朋友行列!，請聯繫我，我會盡快把你加上去ㄉ，我也會時不時去你那邊晃晃。  

  - 名稱: Qian's Blog

  - 網址: https://blog.qian30.net

  - 描述: 記錄、分享一下我在做啥還有一點生活碎片:D

  - 頭像: https://blog.qian30.net/_astro/me.Dk9CSTMP_Z1YKmpJ.webp

`

const myItems = [
  {
    title: '工具網站',
    imgurl:
      'https://blog.qian30.net/_astro/me.Dk9CSTMP_Z1YKmpJ.webp',
    desc: '一個小小的工具網站專案，用來練習前端，Vue建立',
    siteurl: 'https://tools.qian30.net',
    tags: ['專案'],
  },
  {
    title: 'Linkedln',
    imgurl:
      'https://cdn-icons-png.flaticon.com/128/3536/3536505.png',
    desc: '如果你是 HR 並且又不小心出現在這裡，那或許你會對這個有興趣',
    siteurl: 'https://www.linkedin.com/in/hsuchiachien',
    tags: ['Linkedln'],
  },
]

const friendsPost = await getEntry('spec', 'Links')
const friendItems = [
  {
    title: '高中學長的Blog',
    imgurl: 'https://blog.bob0623.net/_astro/avatar.BCKyvhet_ZvdnjX.webp',
    desc: '高中學長bob的Blog',
    siteurl: 'https://blog.bob0623.net/',
    tags: ['朋友!'],
  },
  {
    title: '呂老闆',
    imgurl: 'https://ricky.place/images/profile.jpg',
    desc: '呂大老闆',
    siteurl: 'https://ricky.place/',
    tags: ['朋友!'],
  },
  {
    title: '第三夏尔',
    imgurl: 'https://thirdshire.com/blackcat_avatar.jpg',
    desc: '认真生活，积极摸鱼',
    siteurl: 'https://thirdshire.com/',
    tags: ['朋友!'],
  },
]
---

<MainGridLayout title={i18n(I18nKey.links)} description={i18n(I18nKey.links)}>
    <!-- 上半部：我的連結 -->
    <section>
      <h2 class="text-xl font-bold mb-4 dark:text-white text-black">我的連結</h2>
      
      <!-- 描述區塊 -->
      <div class="mb-6 p-6 rounded-[var(--radius-large)] bg-[var(--card-bg,#f5f5f5)] dark:bg-[var(--card-bg,#333)] shadow-sm">
        {myLinksDescription.split('\n\n').map((paragraph, i) => (
          <>
            {paragraph.startsWith('- ') ? (
              <ul class="list-disc pl-5 dark:text-white text-black mb-4">
                {paragraph.split('\n- ').map((item, j) => (
                  j === 0 ? 
                    <li class="dark:text-white text-black">{item.substring(2)}</li> : 
                    <li class="dark:text-white text-black">{item}</li>
                ))}
              </ul>
            ) : (
              <p class="dark:text-white text-black mb-4">{paragraph}</p>
            )}
          </>
        ))}
      </div>
      
      <!-- 連結卡片區域添加背景 -->
      <div class="p-6 rounded-[var(--radius-large)] bg-[var(--card-bg,#f5f5f5)] dark:bg-[var(--card-bg,#333)] shadow-sm">
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-8">
        {myItems.map((item) => (
          <a
            href={item.siteurl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex flex-nowrap items-stretch h-28 gap-4 rounded-[var(--radius-large)] bg-[var(--card-bg,#f5f5f5)] dark:bg-[var(--card-bg,#333)] hover:shadow-lg hover:scale-105 transition transform duration-300"
          >
            <div class="w-28 h-28 flex-shrink-0 rounded-lg overflow-hidden bg-zinc-200 dark:bg-zinc-900">
              <img src={item.imgurl} alt="頭像" class="w-full h-full object-cover">
            </div>
            <div class="grow w-full flex flex-col justify-center">
              <div class="font-bold transition text-lg dark:text-white text-black mb-1">{item.title}</div>
              <div class="dark:text-white text-black text-sm font-medium">{item.desc}</div>
              <div class="flex items-center mt-1">
                {(item.tags && item.tags.length > 0)
                  ? item.tags.map((tag, i) => (
                      <>
                        {i > 0 && <span class="mx-1.5 dark:text-white text-black text-sm">/</span>}
                        <span class="transition dark:text-white text-black text-sm font-medium">{tag}</span>
                      </>
                    ))
                  : <span class="transition dark:text-white text-black text-sm font-medium">{i18n(I18nKey.noTags)}</span>}
              </div>
            </div>
            <div class="flex items-center pr-4">
              <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" class="transition dark:text-white text-black text-4xl iconify iconify--material-symbols" width="1em" height="1em" viewBox="0 0 24 24">
                <path fill="currentColor" d="M12.6 12L8.7 8.1q-.275-.275-.275-.7t.275-.7t.7-.275t.7.275l4.6 4.6q.15.15.213.325t.062.375t-.062.375t-.213.325l-4.6 4.6q-.275.275-.7.275t-.7-.275t-.275-.7t.275-.7z"></path>
              </svg>
            </div>
          </a>
        ))}
      </div>
      </div>
    </section>
    
    <!-- 下半部：友站連結 -->
    <section class="mt-8">
      <h2 class="text-xl font-bold mb-4 dark:text-white text-black">友站連結</h2>
      <!-- 友站連結卡片區域添加背景 -->
      <div class="p-6 rounded-[var(--radius-large)] bg-[var(--card-bg,#f5f5f5)] dark:bg-[var(--card-bg,#333)] shadow-sm">
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-8">
        {friendItems.map((item) => (
          <a
            href={item.siteurl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex flex-nowrap items-stretch h-28 gap-4 rounded-[var(--radius-large)] bg-[var(--card-bg,#f5f5f5)] dark:bg-[var(--card-bg,#333)] hover:shadow-lg hover:scale-105 transition transform duration-300"
          >
            <div class="w-28 h-28 flex-shrink-0 rounded-lg overflow-hidden bg-zinc-200 dark:bg-zinc-900">
              <img src={item.imgurl} alt="頭像" class="w-full h-full object-cover">
            </div>
            <div class="grow w-full flex flex-col justify-center">
              <div class="font-bold transition text-lg dark:text-white text-black mb-1">{item.title}</div>
              <div class="dark:text-white text-black text-sm font-medium">{item.desc}</div>
              <div class="flex items-center mt-1">
                {(item.tags && item.tags.length > 0)
                  ? item.tags.map((tag, i) => (
                      <>
                        {i > 0 && <span class="mx-1.5 dark:text-white text-black text-sm">/</span>}
                        <span class="transition dark:text-white text-black text-sm font-medium">{tag}</span>
                      </>
                    ))
                  : <span class="transition dark:text-white text-black text-sm font-medium">{i18n(I18nKey.noTags)}</span>}
              </div>
            </div>
            <div class="flex items-center pr-4">
              <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" class="transition dark:text-white text-black text-4xl iconify iconify--material-symbols" width="1em" height="1em" viewBox="0 0 24 24">
                <path fill="currentColor" d="M12.6 12L8.7 8.1q-.275-.275-.275-.7t.275-.7t.7-.275t.7.275l4.6 4.6q.15.15.213.325t.062.375t-.062.375t-.213.325l-4.6 4.6q-.275.275-.7.275t-.7-.275t-.275-.7t.275-.7z"></path>
              </svg>
            </div>
          </a>
        ))}
      </div>
      </div>
    </section>
  </MainGridLayout>